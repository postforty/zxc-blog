[
  {
    "id": "getting-started-with-react",
    "title": {
      "ko": "React 시작하기",
      "en": ""
    },
    "author": "Dandy",
    "createdAt": "2025-10-20T10:00:00Z",
    "summary": {
      "ko": "React의 기본 개념과 Vite를 사용한 프로젝트 설정 방법에 대해 알아봅니다.",
      "en": ""
    },
    "content": {
      "ko": "## React란?\n\nReact는 사용자 인터페이스를 구축하기 위한 JavaScript 라이브러리입니다. 컴포넌트 기반 아키텍처를 사용하여 재사용 가능한 UI를 쉽게 만들 수 있습니다.\n\n## Vite로 프로젝트 시작하기\n\n`npm create vite@latest my-react-app -- --template react-ts` 명령어를 사용하여 새로운 React + TypeScript 프로젝트를 시작할 수 있습니다.",
      "en": ""
    },
    "likes": 0,
    "tags": ["React", "Vite", "TypeScript"]
  },
  {
    "id": "understanding-tailwind-css",
    "title": {
      "ko": "Tailwind CSS 이해하기",
      "en": ""
    },
    "author": "Dandy",
    "createdAt": "2025-10-18T14:30:00Z",
    "summary": {
      "ko": "Utility-first CSS 프레임워크인 Tailwind CSS의 장점과 사용법을 소개합니다.",
      "en": ""
    },
    "content": {
      "ko": "## Utility-First 접근법\n\nTailwind CSS는 미리 정의된 유틸리티 클래스를 HTML에 직접 적용하여 스타일을 적용하는 방식을 사용합니다. 이를 통해 커스텀 CSS 작성 없이 빠르게 UI를 개발할 수 있습니다.\n\n예시: `<div class=\"p-4 bg-blue-500 text-white\">...</div>`",
      "en": ""
    },
    "likes": 0,
    "tags": ["TailwindCSS", "CSS", "Utility-First"]
  },
  {
    "id": "dark-mode-in-react",
    "title": {
      "ko": "React 앱에 다크 모드 추가하기",
      "en": ""
    },
    "author": "Dandy",
    "createdAt": "2025-10-15T09:00:00Z",
    "summary": {
      "ko": "Tailwind CSS와 React Context API를 사용하여 다크 모드 기능을 구현하는 방법을 단계별로 설명합니다.",
      "en": ""
    },
    "content": {
      "ko": "## 왜 다크 모드인가?\n\n다크 모드는 사용자의 눈의 피로를 줄여주고, 특정 환경에서 가독성을 높여줍니다. 또한 최신 앱의 트렌디한 기능 중 하나입니다.\n\n## 구현 방법\n\n1.  `ThemeProvider` Context를 생성합니다.\n2.  `localStorage`에 사용자 테마 설정을 저장합니다.\n3.  `<html>` 요소에 `dark` 클래스를 토글하여 Tailwind CSS의 `dark:` variant를 활성화합니다.",
      "en": ""
    },
    "likes": 0,
    "tags": ["React", "TailwindCSS", "Dark Mode"]
  }
]